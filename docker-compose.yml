version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: spareshark-postgres
    environment:
      POSTGRES_DB: sparesharkdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot Backend
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: spareshark-backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/sparesharkdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      APP_JWT_SECRET: ${JWT_SECRET:-verySecretKeyThatShouldBeChangedInProduction123456789012345678901234567890}
      APP_CORS_ALLOWED_ORIGINS: http://localhost:3000,http://localhost:80,http://frontend
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: spareshark-frontend
    ports:
      - "80:80"
    depends_on:
      - backend

volumes:
  postgres-data: